let fetch = require('node-fetch');

/**
 *
 * @type {ChatboxProtocol}
 *
 * @param orgChannelApiId - Channel API ID
 * @param orgAuthToken - API token of organization
 * @box - Chatbox environment for API (possible values: wobblbox.io, babblebox.io, bustle.chatbox.com)
 *
 */
module.exports = ChatboxSDK = function (orgChannelApiId, orgAuthToken, apiDomain) {
    apiDomain = apiDomain || "bustle.chatbox.com";
    let self = this;
    self.chatboxToken = orgChannelApiId;
    self.orgAuthToken = orgAuthToken;
    const sendMessageURL = "https://" + apiDomain + "/rest/1.0/message/sendToCustomer";
    let options;
    let headers = {
        orgAuthToken: self.orgAuthToken,
        'Content-Type': 'application/json'
    };

    self.sendInstantApp = function (number, message, instantAppSchemaApiId, parameters) {
        console.log("In sendInstantApp");

        options['headers'] = headers;
        options['method'] = 'POST';

        let body = {
            message: message,
            instantAppSchemaApiId: instantAppSchemaApiId,
            instantAppParameters: parameters,
            orgChannelApiId: orgChannelApiId,
            customerChannelKey: number
        };
        options['body'] = JSON.stringify(body);
        console.log("Attempting to send Instant App");
        fetch(sendMessageURL, options)
            .then(function (response) {
                response.json().then(function (json) {
                    if (response.status == 200) {
                        console.log("Successfully sent Instant App " + body.instantAppSchemaApiId + "!");
                    } else {
                        console.log(json);
                    }
                })
                    .catch(error => {
                        console.log("Unknown Error in /sendInstantApp");
                        console.log(error.stack);
                    })
            })
            .catch(function (error) {
                console.log("Error sending Instant App");
                console.log(error.stack);
            })
    };

    self.sendText = function (message, number) {
        options['headers'] = headers;
        options['method'] = 'POST';
        let body = {
            message: message,
            orgChannelApiId: orgChannelApiId,
            customerChannelKey: number
        };
        options['body'] = JSON.stringify(body);
        fetch(sendMessageURL, options)
            .then(function (response) {
                response.json().then(function (json) {
                    if (response.status == 200) {
                        console.log("Successfully sent text");
                    } else {
                        console.log("Error: Response code not 200");
                        console.log(json);
                    }
                })
                    .catch(error => {
                        console.log("Unknown Error in self.sendText");
                        console.log(error.stack);
                    })
            })
            .catch(function (error) {
                console.log("Error sending text in self.sendText");
                console.log(error.stack);
            })
    };

    self.getPhoneNumber = function (userIdNull, callback) {
        let getCustomerNumberURL = 'https://'+apiDomain+'/rest/1.0/customer/';

        if (!userIdNull) {
            console.log("No user id given");
        } else {
            let userId = userIdNull.substring(0, userIdNull.indexOf('n'));
            if (!userId) {
                userId = userIdNull;
            }
            getCustomerNumberURL = getCustomerNumberURL.concat(userId.toString());

            //--------------------------
            // NOTE: Uncomment the above getCustomerNumberURL
            //--------------------------

            options = {};
            options['headers'] = headers;
            fetch(getCustomerNumberURL, options)
                .then(function (response) {
                    response.json().then(function (json) {
                        if (response.status == "200") {
                            let phoneNumber = json.identities[0].key;
                            callback(phoneNumber, userId.toString());
                        } else {
                            console.log("Unknown error in getPhoneNumber");
                            console.log(json);
                        }
                    })
                        .catch(error => {
                            console.log("Error getting JSON in getPhoneNumber");
                            console.log(error.stack);
                        })
                })
                .catch(error => {
                    console.log("Error getting customer phone number from chatbox");
                    console.log(error.stack);
                })
        }
    }
};